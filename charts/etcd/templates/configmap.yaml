# templates/configmap.yaml
{{- if .Values.auth.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "etcd.fullname" . }}-auth-setup
  labels:
    {{- include "etcd.labels" . | nindent 4 }}
data:
  setup.sh: |
    #!/bin/sh
    
    #set -e
    
    ETCD_ENDPOINTS="http://{{ include "etcd.fullname" . }}-0.{{ include "etcd.fullname" . }}-headless.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.clientPort }}"
    
    # Esperar a que etcd esté disponible
    until ETCDCTL_API=3 etcdctl --endpoints=${ETCD_ENDPOINTS} member list; do
      echo "Esperando a que etcd esté disponible..."
      sleep 2
    done

    # Verificar si la autenticación ya está habilitada
    if ETCDCTL_API=3 etcdctl --endpoints=${ETCD_ENDPOINTS} auth status|grep "false"
    then
      echo "Configurando autenticación..."
      
      # Crear usuario root
      ETCDCTL_API=3 etcdctl --endpoints=${ETCD_ENDPOINTS} user add root --new-user-password=${ROOT_PASSWORD}
      ETCDCTL_API=3 etcdctl --endpoints=${ETCD_ENDPOINTS} role add root
      ETCDCTL_API=3 etcdctl --endpoints=${ETCD_ENDPOINTS} user grant-role root root

      # Crear roles y usuarios adicionales
      {{- range .Values.auth.users }}
      ETCDCTL_API=3 etcdctl --endpoints=${ETCD_ENDPOINTS} user add {{ .name }} --new-user-password=${USER_{{ .name | upper }}_PASSWORD}
      {{- range .roles }}
      ETCDCTL_API=3 etcdctl --endpoints=${ETCD_ENDPOINTS} role add {{ . }}
      ETCDCTL_API=3 etcdctl --endpoints=${ETCD_ENDPOINTS} user grant-role {{ $.name }} {{ . }}
      {{- end }}
      {{- end }}

      # Habilitar autenticación
      ETCDCTL_API=3 etcdctl --endpoints=${ETCD_ENDPOINTS} auth enable
    else
      echo "Auth was enabled"
    fi
    sleep 36000
{{- end }}